@model IEnumerable<InmobiliariaAlbornoz.Models.Contrato>

@{
    ViewData["Title"] = "Lista de Contratos";
}

@if (TempData["msg"] != null)
{
    <div class="row">
        <div class="col-sm-4">
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                <span>@TempData["msg"]</span>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true"></span><i class="fas fa-times-circle"></i>
                </button>
            </div>
        </div>
    </div>
}

@if (Model != null && Model.Count() == 0)
{
    <div class="row">
        <div class="col-sm-4">
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                <span>No hay contratos cargados en la Base de Datos</span>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true"></span><i class="fas fa-times-circle"></i>
                </button>
            </div>
        </div>
    </div>
}

<h1>Contratos</h1>
<hr />
<p>
    <a class="btn btn-secondary" asp-action="Create"><i class="far fa-plus-square"></i> Cargar Nuevo</a>
    <a class="btn btn-secondary" asp-action="Valids"><i class="fas fa-file-contract"></i> Vigentes por Fecha</a>

</p>
<hr />
<table class="table" id="table_id">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IdInmueble)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Inquilino)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Desde)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Hasta)
            </th>
            <th width="40">
                @Html.DisplayNameFor(model => model.Valido)
            </th>
            <th width="70"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <a asp-action="Details" asp-controller="Inmuebles" asp-route-id="@item.Id">Ver</a>
                    </td>
                    <td>
                        <a asp-action="Details" asp-controller="Inquilinos" asp-route-id="@item.IdInquilino">@item.Inquilino.Nombre</a>
                        @*@Html.DisplayFor(modelItem => item.Inquilino.Nombre)*@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Desde)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Hasta)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.ValidoNombre)
                    </td>
                    <td height="80">
                        @if (item.Valido)
                        {
                            <div>
                                <i class="fas fa-edit"></i> @Html.ActionLink("Editar", "Edit", new { id = item.Id })
</div>
                            <div>
                                <i class="far fa-credit-card"></i> <a asp-controller="Contratos" asp-action="Pagos" asp-route-id="@item.Id">Pagos</a>
                            </div>
                        }
                        <div>
                            <i class="fas fa-info-circle"></i> @Html.ActionLink("Detalles", "Details", new { id = item.Id })
                        </div>
                        @if (User.IsInRole("Administrador"))
                        {
                            <div>
                                <i class="fas fa-trash-alt"></i> @Html.ActionLink("Borrar", "Delete", new { id = item.Id })
                            </div>
                        }
                    </td>
                </tr>
            }
        }

    </tbody>
</table>

@section Scripts {
    @{await Html.RenderPartialAsync("_DataTable");}
}